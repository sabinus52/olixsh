#!/usr/bin/env bash
###
# Interpréteur oliXsh
# ==============================================================================
# @package olixsh
# @author Olivier <sabinus52@gmail.com>
# @link https://github.com/sabinus52/olixsh
##

#set -e
#set +bm
shopt -s expand_aliases
shopt -s extglob


###
# Détermination où se trouve le framework
##
if [ -L $0 ]; then
    OLIX_ROOT_SCRIPT=$(readlink $0)
else
    OLIX_ROOT_SCRIPT=$0
fi
cd $(dirname $OLIX_ROOT_SCRIPT)
OLIX_ROOT=$(pwd)
cd - > /dev/null


###
# Version
##
if [[ -r $OLIX_ROOT/VERSION ]]; then
    OLIX_VERSION=$(cat $OLIX_ROOT/VERSION)
else
    OLIX_VERSION="3.alpha"
fi


###
# Chargement des librairies requis
##
source $OLIX_ROOT/core/constants.sh
source $OLIX_ROOT/core/logger.sh
source $OLIX_ROOT/core/core.sh


###
# Chargement des autres librairies
##
load "core/*.exec.sh"
load "lib/*"


###
# Gestion des options et arguments
##
OLIX_ARGS=""
while [[ $# -ge 1 ]]; do
    case $1 in
        # Paramètres communes
        -d|--debug) 
            OLIX_OPTION_VERBOSEDEBUG=true
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="debug"
            ;;
        -v|--verbose) 
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="info"
            ;;
        --no-warnings)
            OLIX_OPTION_WARNINGS=false
            ;;
        --no-color)
            OLIX_OPTION_COLOR=false
            ;;
        -h|--help)
            OLIX_OPTION_HELP=true
            ;;
        --version)
            load "core/color.sh"
            Print.version
            die 0
            ;;

        # Paramètres communes mais cachés pour afficher des listes dans les commandes ou modules
        --list)
            OLIX_OPTION_LIST=true
            ;;

        *)
            [[ -z $OLIX_ARG1 ]] && OLIX_ARG1=$1
            OLIX_ARGS="$OLIX_ARGS $1"
            ;;
    esac
    shift
done

# Activation des couleurs
[[ $OLIX_OPTION_COLOR == true ]] && load "core/color.sh"

# Mode debug pour afficher les paramètres
info "Version : $OLIX_VERSION"
debug "OLIX_ROOT=$OLIX_ROOT"
debug "OLIX_ARGS=$OLIX_ARGS"


###
# Affichage de l'aide
##
[[ -z $OLIX_ARGS && $OLIX_OPTION_LIST == true ]] && Command.execute.completion
[[ -z $OLIX_ARGS ]] && Print.usage && die 0


###
# Vérification d'Olix et chargement des paramètres
##
checkOlixsh $OLIX_ARGS
Config.load 'olixsh'


###
# Execution de la commande ou du module
##
if Command.exists $OLIX_ARG1; then
    Command.execute $OLIX_ARGS
elif Module.installed $OLIX_ARG1; then
    Module.execute $OLIX_ARGS
else
    Print.usage
    warning "La commande ou le module \"$OLIX_ARG1\" n'existe pas"
fi


###
# Sortie avec code retour global
##
die $OLIX_CODE_RETURN
